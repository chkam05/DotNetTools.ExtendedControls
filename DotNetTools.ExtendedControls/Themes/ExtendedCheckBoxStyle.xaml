<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:chkam05.DotNetTools.ExtendedControls">

    <Style x:Key="ExtendedCheckBoxStyle" TargetType="{x:Type local:ExtendedCheckBox}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF707070"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="GryphlBrush" Value="White"/>
        <Setter Property="InteractionBehaviour" Value="LightColorShading"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExtendedCheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="{TemplateBinding Height}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" Data="F1 M 0,0 L 0.5,0 L 2.5,2 L 4.5,0 L 5,0 L 5,0.5 L 3,2.5 L 5,4.5 L 5,5 L 4.5,5 L 2.5,3 L 0.5,5 L 0,5 L 0,4.5 L 2,2.5 L 0,0.5 Z" Fill="{Binding GryphlBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}" Margin="3" Opacity="0" Stretch="Fill"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{Binding GryphlBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{Binding GryphlBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{Binding GryphlBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedCheckBox}}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>