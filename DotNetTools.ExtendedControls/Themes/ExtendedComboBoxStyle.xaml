<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:chkam05.DotNetTools.ExtendedControls" 
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COMBOBOX TOGGLE BUTTON TEMPLATE -->

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" CornerRadius="4">
                        <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="arrow" Fill="{Binding GryphlBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" HorizontalAlignment="Center" Stroke="{Binding GryphlBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" StrokeThickness="0" VerticalAlignment="Center" Data="F1 M 0,0 L 7.5,0 L 3.75,4 L0,0 Z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding GryphlBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{Binding GryphlBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="arrow" Value="{Binding GryphlBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="{Binding GryphlBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Value="false">
                            <Setter Property="Opacity" TargetName="arrow" Value="0.56"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COMBOBOX TEMPLATE -->

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type local:ExtendedComboBox}">
        <Border x:Name="templateBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{Binding DropdownBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" BorderThickness="1" Background="{Binding DropdownBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" CornerRadius="{Binding DropdownCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Margin="0,2,0,0" Padding="2">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{Binding DropdownForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="IsSelectionActive" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="Transparent"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TEXT BOX STYLE -->

    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- EDITABLE COMBOBOX TEMPLATE -->

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type local:ExtendedComboBox}">
        <Border x:Name="templateBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{Binding DropdownBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" BorderThickness="1" Background="{Binding DropdownBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" CornerRadius="{Binding DropdownCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}" Margin="0,2,0,0" Padding="2">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" CornerRadius="4,0,0,4">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="Center"/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="IsSelectionActive" Value="true">
                <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
                <Setter Property="Foreground" TargetName="PART_EditableTextBox" Value="{Binding ForegroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedComboBox}}}"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="Transparent"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- COMBOBOX STYLE -->

    <Style x:Key="ExtendedComboBoxStyle" TargetType="{x:Type local:ExtendedComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="GryphlBrush" Value="#FF606060"/>
        <Setter Property="InteractionBehaviour" Value="LightColorShading"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>