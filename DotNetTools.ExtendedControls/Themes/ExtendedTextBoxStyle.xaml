<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:chkam05.DotNetTools.ExtendedControls" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DotNetTools.ExtendedControls;component/Themes/ExtendedScrollBarStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="HorizontalBorderedScrollBar" TargetType="{x:Type local:ExtendedScrollBar}" BasedOn="{StaticResource ExtendedScrollBarStyle}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Foreground" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="InteractionBehaviour" Value="{Binding InteractionBehaviour, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
        <Setter Property="Margin" Value="2,0,2,2"/>
        <Setter Property="MinHeight" Value="6"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="ThumbCornerRadius" Value="2"/>
    </Style>

    <Style x:Key="VerticalBorderedScrollBar" TargetType="{x:Type local:ExtendedScrollBar}" BasedOn="{StaticResource ExtendedScrollBarStyle}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Foreground" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
        <Setter Property="InteractionBehaviour" Value="{Binding InteractionBehaviour, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
        <Setter Property="Margin" Value="0,2,2,2"/>
        <Setter Property="MinWidth" Value="6"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="ThumbCornerRadius" Value="2"/>
        <Setter Property="Width" Value="6"/>
    </Style>

    <Style x:Key="ExtendedTextBoxStyle" TargetType="{x:Type local:ExtendedTextBox}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="InteractionBehaviour" Value="LightColorShading"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="templateBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" Margin="2" VerticalScrollBarVisibility="Hidden" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid x:Name="Grid" Background="{x:Null}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                                        <local:ExtendedScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Grid.Column="1" Grid.Row="0" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Style="{StaticResource VerticalBorderedScrollBar}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <local:ExtendedScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Style="{StaticResource HorizontalBorderedScrollBar}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="templateBorder" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="Foreground" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="Foreground" Value="{Binding ForegroundHiglihted, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                        </Trigger>
                        <Trigger Property="IsSelectionActive" Value="true">
                            <Setter Property="Background" TargetName="templateBorder" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="BorderBrush" TargetName="templateBorder" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                            <Setter Property="Foreground" Value="{Binding ForegroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:ExtendedTextBox}}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>