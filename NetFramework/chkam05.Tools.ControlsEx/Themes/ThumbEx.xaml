<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="ThumbEx.ControlTemplate" TargetType="{x:Type local:ThumbEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"/>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
                <Setter Property="Opacity" TargetName="border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
            </Trigger>

            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundDragging, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushDragging, RelativeSource={RelativeSource AncestorType={x:Type local:ThumbEx}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ThumbExStyle" TargetType="{x:Type local:ThumbEx}">
        <Setter Property="Background" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundDragging" Value="{Binding DataContext.AccentBackgroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.AccentBorderBrush, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushDragging" Value="{Binding DataContext.AccentBorderBrushPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Foreground" Value="{Binding DataContext.AccentForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Template" Value="{StaticResource ThumbEx.ControlTemplate}"/>
    </Style>

</ResourceDictionary>