<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:aero2="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/ToggleButtonEx.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="ComboBoxEx.EditableTextBox.ControlTemplate" TargetType="{x:Type TextBox}">
        <ScrollViewer
            x:Name="PART_ContentHost"
            Background="Transparent"
            Foreground="{TemplateBinding Foreground}"
            Focusable="false"
            HorizontalScrollBarVisibility="Hidden"
            VerticalScrollBarVisibility="Hidden"/>
    </ControlTemplate>

    <Style x:Key="ComboBoxEx.EditableTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEx.EditableTextBox.ControlTemplate}"/>
    </Style>

    <Style x:Key="ComboBoxEx.ToggleButtonExStyle" BasedOn="{StaticResource ToggleButtonExStyle}" TargetType="{x:Type local:ToggleButtonEx}">
        <Setter Property="Background" Value="{Binding ButtonBackground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BackgroundChecked" Value="{Binding ButtonBackgroundPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding ButtonBackgroundInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding ButtonBackgroundMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BackgroundPressed" Value="{Binding ButtonBackgroundPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderBrush" Value="{Binding ButtonBorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderBrushChecked" Value="{Binding ButtonBorderBrushPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding ButtonBorderBrushInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding ButtonBorderBrushMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderBrushPressed" Value="{Binding ButtonBorderBrushPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="BorderThickness" Value="{Binding ButtonBorderThickness, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="CornerRadius" Value="{Binding ButtonCornerRadius, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Margin" Value="{Binding ButtonMargin, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ComboBoxEx}}}"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxExEditable.ControlTemplate" TargetType="{x:Type local:ComboBoxEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">

            <Grid
                x:Name="templateRoot"
                SnapsToDevicePixels="true">

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                    <aero2:SystemDropShadowChrome
                        x:Name="shadow"
                        Color="Transparent"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">

                        <Grid
                            x:Name="DropDown"
                            SnapsToDevicePixels="True"
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">

                            <Border
                                x:Name="dropDownBorder"
                                Background="{TemplateBinding DropDownBackground}"
                                BorderBrush="{TemplateBinding DropDownBorderBrush}"
                                BorderThickness="{TemplateBinding DropDownBorderThickness}"
                                CornerRadius="{TemplateBinding DropDownCornerRadius}"
                                Padding="{TemplateBinding DropDownPadding}">

                                <ScrollViewer
                                    x:Name="DropDownScrollViewer"
                                    SnapsToDevicePixels="True">

                                    <Grid
                                        x:Name="grid"
                                        RenderOptions.ClearTypeHint="Enabled">

                                        <Canvas
                                            x:Name="canvas"
                                            HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">

                                            <Rectangle
                                                x:Name="opaqueRect"
                                                Fill="Transparent"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Stroke="{x:Null}"
                                                StrokeThickness="0"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>

                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            TextBlock.Foreground="{TemplateBinding DropDownForeground}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </aero2:SystemDropShadowChrome>
                </Popup>

                <Grid
                    x:Name="controlGrid"
                    Margin="{TemplateBinding Padding}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox
                        x:Name="PART_EditableTextBox"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Margin="{TemplateBinding Padding}"
                        Style="{TemplateBinding EditableTextBoxStyle}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    <local:ToggleButtonEx
                        x:Name="toggleButton"
                        Grid.Column="1"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Style="{TemplateBinding ToggleButtonExStyle}">

                        <materialDesign:PackIcon
                            Foreground="{TemplateBinding ButtonForeground}"
                            Height="Auto"
                            HorizontalAlignment="Center"
                            Kind="ChevronDown"
                            VerticalAlignment="Center"
                            Width="Auto"/>
                    </local:ToggleButtonEx>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_EditableTextBox" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="Opacity" TargetName="border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_EditableTextBox" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
            </Trigger>
            
            <Trigger Property="HasItems" Value="false">
                <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxEx.ControlTemplate" TargetType="{x:Type local:ComboBoxEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">

            <Grid
                x:Name="templateRoot"
                SnapsToDevicePixels="true">

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                    <aero2:SystemDropShadowChrome
                        x:Name="shadow"
                        Color="Transparent"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">

                        <Grid
                            x:Name="DropDown"
                            SnapsToDevicePixels="True"
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">

                            <Border
                                x:Name="dropDownBorder"
                                Background="{TemplateBinding DropDownBackground}"
                                BorderBrush="{TemplateBinding DropDownBorderBrush}"
                                BorderThickness="{TemplateBinding DropDownBorderThickness}"
                                CornerRadius="{TemplateBinding DropDownCornerRadius}"
                                Padding="{TemplateBinding DropDownPadding}">

                                <ScrollViewer
                                    x:Name="DropDownScrollViewer"
                                    SnapsToDevicePixels="True">

                                    <Grid
                                        x:Name="grid"
                                        RenderOptions.ClearTypeHint="Enabled">

                                        <Canvas
                                            x:Name="canvas"
                                            HorizontalAlignment="Left"
                                            Height="0"
                                            VerticalAlignment="Top"
                                            Width="0">

                                            <Rectangle
                                                x:Name="opaqueRect"
                                                Fill="Transparent"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Stroke="{x:Null}"
                                                StrokeThickness="0"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>

                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            TextBlock.Foreground="{TemplateBinding DropDownForeground}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </aero2:SystemDropShadowChrome>
                </Popup>

                <Grid
                    x:Name="controlGrid"
                    Margin="{TemplateBinding Padding}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter
                        x:Name="contentPresenter"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    <local:ToggleButtonEx
                        x:Name="toggleButton"
                        Grid.Column="1"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Style="{TemplateBinding ToggleButtonExStyle}">

                        <materialDesign:PackIcon
                            Foreground="{TemplateBinding ButtonForeground}"
                            Height="Auto"
                            HorizontalAlignment="Center"
                            Kind="ChevronDown"
                            VerticalAlignment="Center"
                            Width="Auto"/>
                    </local:ToggleButtonEx>
                </Grid>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="Opacity" TargetName="border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxEx}}}"/>
            </Trigger>

            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
            </Trigger>
            
            <Trigger Property="HasItems" Value="false">
                <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxExStyle" TargetType="{x:Type local:ComboBoxEx}">
        <Setter Property="Background" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackground" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundPressed" Value="{Binding DataContext.AccentBackgroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrush" Value="{Binding DataContext.AccentBorderBrush, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushPressed" Value="{Binding DataContext.AccentBorderBrushPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonForeground" Value="{Binding DataContext.AccentForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonForegroundMouseOver" Value="{Binding DataContext.AccentForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonForegroundPressed" Value="{Binding DataContext.AccentForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.AccentBorderBrush, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BorderBrushInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DropDownBackground" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="DropDownBorderBrush" Value="{Binding DataContext.AccentBorderBrush, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="DropDownForeground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxExEditable.ControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>