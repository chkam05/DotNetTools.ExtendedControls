<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="GridViewEx.ColumnHeader.ControlTemplate" TargetType="{x:Type GridViewColumnHeader}">
        <Grid>
            <Border
                x:Name="Border" 
                Background="{Binding ColumnHeaderBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrush="{Binding ColumnHeaderBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderThickness="{Binding ColumnHeaderBorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                CornerRadius="{Binding ColumnHeaderCornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                Padding="{Binding ColumnHeaderPadding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}">

                <ContentPresenter
                    x:Name="HeaderContent"
                    Content="{TemplateBinding Content}"
                    Margin="0"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{Binding ColumnHeaderForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                    TextBlock.TextAlignment="{Binding ColumnTextAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>

            <local:ThumbEx
                x:Name="PART_HeaderGripper"
                Background="{Binding ColumnGripperBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BackgroundDragging="{Binding ColumnGripperBackgroundPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BackgroundInactive="{Binding ColumnGripperBackgroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BackgroundMouseOver="{Binding ColumnGripperBackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrush="{Binding ColumnGripperBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrushDragging="{Binding ColumnGripperBorderBrushPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrushInactive="{Binding ColumnGripperBorderBrushInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrushMouseOver="{Binding ColumnGripperBorderBrushMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderThickness="{Binding ColumnGripperBorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                CornerRadius="0"
                HorizontalAlignment="Right"
                Margin="2"
                Width="{Binding ColumnGripperWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderBorderBrushMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderBackgroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderBorderBrushMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_HeaderGripper" Value="{Binding ColumnHeaderForegroundMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderBackgroundPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderBorderBrushPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_HeaderGripper" Value="{Binding ColumnHeaderForegroundPressed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>

            <Trigger Property="HasContent" Value="False">
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderBackgroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderBorderBrushInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="Opacity" TargetName="Border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="HeaderContent" Value="{Binding ColumnHeaderForegroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderBackgroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderBorderBrushInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="Opacity" TargetName="Border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="HeaderContent" Value="{Binding ColumnHeaderForegroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="GridViewEx.ColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template" Value="{StaticResource GridViewEx.ColumnHeader.ControlTemplate}"/>
    </Style>

</ResourceDictionary>