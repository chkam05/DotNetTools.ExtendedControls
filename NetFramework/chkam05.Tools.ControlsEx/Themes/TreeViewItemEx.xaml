<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>
    
    <ControlTemplate x:Key="TreeViewItemEx.ControlTemplate" TargetType="{x:Type local:TreeViewItemEx}">
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border
                x:Name="Bd"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                SnapsToDevicePixels="true">

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="16" Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <local:ToggleButtonEx
                        x:Name="Expander"
                        Background="Transparent"
                        BackgroundChecked="Transparent"
                        BackgroundInactive="Transparent"
                        BackgroundMouseOver="Transparent"
                        BackgroundPressed="Transparent"
                        BorderBrush="Transparent"
                        BorderBrushChecked="Transparent"
                        BorderBrushInactive="Transparent"
                        BorderBrushMouseOver="Transparent"
                        BorderBrushPressed="Transparent"
                        BorderThickness="0"
                        ClickMode="Press"
                        Foreground="{TemplateBinding Foreground}"
                        ForegroundChecked="{TemplateBinding Foreground}"
                        ForegroundInactive="{TemplateBinding ForegroundInactive}"
                        ForegroundMouseOver="{TemplateBinding ForegroundMouseOver}"
                        ForegroundPressed="{TemplateBinding ForegroundSelected}"
                        Grid.Column="0"
                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Margin="0"
                        MinHeight="0"
                        MinWidth="0"
                        Padding="0">

                        <materialDesign:PackIcon
                            x:Name="expanderIcon"
                            Height="{TemplateBinding ExpanderIconHeight}"
                            Kind="MinusBoxOutline"
                            Width="{TemplateBinding ExpanderIconWidth}"/>

                    </local:ToggleButtonEx>

                    <ContentPresenter
                        x:Name="PART_Header"
                        ContentSource="Header"
                        Grid.Column="1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="{TemplateBinding Padding}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Center"/>
                </Grid>
            </Border>
            
            <ItemsPresenter
                x:Name="ItemsHost"
                Grid.Row="1"
                Margin="{TemplateBinding ChildPadding}"/>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
                <Setter Property="Kind" TargetName="expanderIcon" Value="PlusBoxOutline"/>
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
            
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_Header" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="Opacity" TargetName="Bd" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
            </Trigger>

            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" TargetName="Bd" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="Foreground" Value="{Binding ForegroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="PART_Header" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TreeViewItemEx}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TreeViewItemExStyle" TargetType="{x:Type local:TreeViewItemEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundSelected" Value="{Binding DataContext.AccentBackgroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BorderBrushInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushSelected" Value="{Binding DataContext.AccentBorderBrushSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.AccentForegroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundSelected" Value="{Binding DataContext.AccentForegroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="OpacityInactive" Value="{Binding DataContext.OpacityInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="Template" Value="{StaticResource TreeViewItemEx.ControlTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>