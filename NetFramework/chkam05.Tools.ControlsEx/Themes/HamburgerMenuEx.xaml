<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:conv="clr-namespace:chkam05.Tools.ControlsEx.Converters"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/ListViewItemEx.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <conv:NotConverter x:Key="NotConverter"/>
    <conv:ThicknessModifierConverter x:Key="ThicknessModifierConverter"/>

    <DataTemplate x:Key="HamburgerMenuEx.DataTemplate">
        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid
                x:Name="iconGrid"
                Grid.Column="0">

                <Image
                    x:Name="iconImage"
                    Height="{Binding ActualHeight, ElementName=iconGrid}"
                    HorizontalAlignment="Stretch"
                    Source="{Binding Icon}"
                    VerticalAlignment="Stretch"
                    Width="{Binding ActualHeight, ElementName=iconGrid}"/>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    HorizontalAlignment="Stretch"
                    Height="{Binding ActualHeight, ElementName=iconGrid}"
                    Kind="{Binding IconKind}"
                    VerticalAlignment="Stretch"
                    Width="{Binding ActualHeight, ElementName=iconGrid}"/>
            </Grid>

            <TextBlock
                FontWeight="Bold"
                FontSize="16"
                Grid.Column="1"
                Margin="{Binding ItemPadding,
                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}},
                    Converter={StaticResource ThicknessModifierConverter},
                    ConverterParameter=LEFT:LEFT;TOP:0;RIGHT:RIGHT:0;BOTTOM:0}"
                Text="{Binding Title}"
                VerticalAlignment="Center"/>
        </Grid>
        
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Icon, Converter={StaticResource NotConverter}, ConverterParameter={x:Null}}" Value="True"/>
                    <Condition Binding="{Binding Path=IconKind, Converter={StaticResource NotConverter}, ConverterParameter={x:Static materialDesign:PackIconKind.None}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" TargetName="iconImage" Value="Collapsed"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Icon}" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="iconImage" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IconKind}" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="HamburgerMenuEx.ListViewItemExStyle" BasedOn="{StaticResource ListViewItemExStyle}" TargetType="{x:Type local:ListViewItemEx}">
        <Setter Property="BorderThickness" Value="{Binding ItemBorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="{Binding ItemHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}"/>
        <Setter Property="Margin" Value="{Binding ItemMargin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}"/>
        <Setter Property="Padding" Value="{Binding ItemPadding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowDescriptionInToolTip, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:HamburgerMenuEx}}}" Value="true">
                <Setter Property="ToolTip" Value="{Binding Description}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="HamburgerMenuEx.ControlTemplate" TargetType="{x:Type local:HamburgerMenuEx}">
        <Grid>
            <local:ListViewEx
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                HorizontalAlignment="Stretch"
                ItemContainerStyle="{TemplateBinding ItemStyle}"
                ItemTemplate="{StaticResource HamburgerMenuEx.DataTemplate}"
                ItemsSource="{Binding Items, RelativeSource={RelativeSource AncestorType={x:Type local:HamburgerMenuEx}}}"
                Padding="{TemplateBinding Padding}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                VerticalAlignment="Stretch"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="HamburgerMenuExStyle" TargetType="{x:Type local:HamburgerMenuEx}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--Setter Property="ItemStyle" Value="{StaticResource HamburgerMenuEx.ListViewItemExStyle}"/-->
        <Setter Property="Padding" Value="2,1"/>
        <Setter Property="Template" Value="{StaticResource HamburgerMenuEx.ControlTemplate}"/>
    </Style>

</ResourceDictionary>