<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:conv="clr-namespace:chkam05.Tools.ControlsEx.Converters"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <conv:InnerCornerRadiusConverter x:Key="InnerCornerRadiusConverter"/>
    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="TabItemEx.ControlTemplate" TargetType="{x:Type local:TabItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">

            <ContentPresenter
                x:Name="contentPresenter"
                ContentSource="Header"
                Focusable="False"
                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>

        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="-90"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Top">
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="90"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter Property="CornerRadius" TargetName="templateRoot">
                    <Setter.Value>
                        <MultiBinding
                            Converter="{StaticResource InnerCornerRadiusConverter}"
                            ConverterParameter="topLeft:bottomRight;topRight:bottomLeft;bottomRight:topLeft;bottomLeft:topRight">
                            <Binding
                                Path="CornerRadius"
                                Mode="OneWay"
                                RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TabItemEx}}"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="Opacity" TargetName="templateRoot" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundSelected, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="Panel.ZIndex" Value="1"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:TabItemEx}}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabItemExStyle" TargetType="{x:Type local:TabItemEx}">
        <Setter Property="Background" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundSelected" Value="{Binding DataContext.AccentBackgroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushSelected" Value="{Binding DataContext.AccentBorderBrushSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.AccentForegroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundSelected" Value="{Binding DataContext.AccentForegroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="OpacityInactive" Value="{Binding DataContext.OpacityInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template" Value="{StaticResource TabItemEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

</ResourceDictionary>