<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="RadioButtonEx.ControlTemplate" TargetType="{x:Type local:RadioButtonEx}">
        <Border
            x:Name="border"
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">

            <Grid
                SnapsToDevicePixels="True">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <materialDesign:PackIcon
                    x:Name="optionMark"
                    Foreground="{TemplateBinding Background}"
                    Height="{TemplateBinding CheckMarkHeight}"
                    HorizontalAlignment="Center"
                    Grid.Column="0"
                    Kind="RadioButtonUnchecked"
                    Margin="0,0,4,0"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding CheckMarkWidth}"/>

                <ContentPresenter
                    x:Name="contentPresenter"
                    Grid.Column="1"
                    Focusable="False"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" TargetName="optionMark" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
                <Setter Property="Opacity" TargetName="border" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" TargetName="optionMark" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" TargetName="optionMark" Value="{Binding BackgroundPressed, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding ForegroundPressed, RelativeSource={RelativeSource AncestorType={x:Type local:RadioButtonEx}}}"/>
            </Trigger>

            <Trigger Property="HasContent" Value="false">
                <Setter Property="Margin" TargetName="optionMark" Value="0"/>
                <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="optionMark" Value="RadioButtonChecked"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="RadioButtonExStyle" TargetType="{x:Type local:RadioButtonEx}">
        <Setter Property="Background" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundPressed" Value="{Binding DataContext.AccentBackgroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.ThemeForegroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundPressed" Value="{Binding DataContext.ThemeForegroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="OpacityInactive" Value="{Binding DataContext.OpacityInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Template" Value="{StaticResource RadioButtonEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>