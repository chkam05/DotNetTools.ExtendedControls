<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:conv="clr-namespace:chkam05.Tools.ControlsEx.Converters"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <ControlTemplate x:Key="MenuItemEx.TopLevelHeader.ControlTemplate" TargetType="{x:Type local:MenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true">
            
            <Grid VerticalAlignment="Center">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="{TemplateBinding IconKind}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    FlowDirection="LeftToRight"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="CheckBoxOutlineBlank"
                    Margin="{TemplateBinding IconMargin}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed"
                    Width="{TemplateBinding IconWidth}"/>

                <ContentPresenter
                    ContentSource="Header"
                    Grid.Column="1"
                    Margin="{TemplateBinding ContentPadding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    PlacementTarget="{Binding ElementName=templateRoot}">
                    
                    <Border
                        x:Name="SubMenuBorder"
                        Background="{TemplateBinding SubMenuBackground}"
                        BorderBrush="{TemplateBinding SubMenuBorderBrush}"
                        BorderThickness="{TemplateBinding SubMenuBorderThickness}">
                        
                        <local:ScrollViewerEx
                            x:Name="SubMenuScrollViewer">
                            
                            <Grid
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="Enabled">

                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">

                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="Transparent"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>

                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </local:ScrollViewerEx>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Opacity" TargetName="templateRoot" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
            </Trigger>

            <Trigger Property="IsCheckable" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>

            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemEx.TopLevel.ControlTemplate" TargetType="{x:Type local:MenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true">

            <Grid VerticalAlignment="Center">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="{TemplateBinding IconKind}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    FlowDirection="LeftToRight"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="CheckBoxOutlineBlank"
                    Margin="{TemplateBinding IconMargin}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed"
                    Width="{TemplateBinding IconWidth}"/>

                <ContentPresenter
                    ContentSource="Header"
                    Grid.Column="1"
                    Margin="{TemplateBinding ContentPadding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Opacity" TargetName="templateRoot" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>
            
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
            </Trigger>

            <Trigger Property="IsCheckable" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemEx.Header.ControlTemplate" TargetType="{x:Type local:MenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            MinHeight="22"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding IconWidth}" Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="{TemplateBinding IconKind}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    FlowDirection="LeftToRight"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="CheckBoxOutlineBlank"
                    Margin="{TemplateBinding IconMargin}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed"
                    Width="{TemplateBinding IconWidth}"/>

                <ContentPresenter
                    ContentSource="Header"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding ContentPadding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"/>

                <TextBlock
                    Grid.Column="2"
                    Margin="{TemplateBinding ShortcutPadding}"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>

                <materialDesign:PackIcon
                    x:Name="RightArrow"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="ChevronRight"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">

                    <Border
                        x:Name="SubMenuBorder"
                        Background="{TemplateBinding SubMenuBackground}"
                        BorderBrush="{TemplateBinding SubMenuBorderBrush}"
                        BorderThickness="{TemplateBinding SubMenuBorderThickness}">

                        <local:ScrollViewerEx
                            x:Name="SubMenuScrollViewer">

                            <Grid
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="Enabled">

                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">

                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="Transparent"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>

                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="true"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </local:ScrollViewerEx>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Opacity" TargetName="templateRoot" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
            </Trigger>

            <Trigger Property="IsCheckable" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>

            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemEx.ControlTemplate" TargetType="{x:Type local:MenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            MinHeight="22"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true">
            
            <Grid>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding IconWidth}" Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="{TemplateBinding IconKind}"
                    Margin="{TemplateBinding IconMargin}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="{TemplateBinding IconWidth}"/>

                <materialDesign:PackIcon
                    x:Name="GlyphPanel"
                    FlowDirection="LeftToRight"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    Height="{TemplateBinding IconHeight}"
                    Kind="CheckBoxOutlineBlank"
                    Margin="{TemplateBinding IconMargin}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed"
                    Width="{TemplateBinding IconWidth}"/>

                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentSource="Header"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding ContentPadding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"/>

                <TextBlock
                    x:Name="menuGestureText"
                    Grid.Column="2"
                    Margin="{TemplateBinding ShortcutPadding}"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Opacity" TargetName="templateRoot" Value="{Binding OpacityInactive, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>

            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="CheckBoxOutline"/>
            </Trigger>

            <Trigger Property="IsCheckable" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="GlyphPanel" Value="{Binding ForegroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:MenuItemEx}}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuItemExStyle" TargetType="{x:Type local:MenuItemEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundSelected" Value="{Binding DataContext.AccentBackgroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BorderBrushInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushSelected" Value="{Binding DataContext.AccentBorderBrushSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{Binding DataContext.ThemeForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.AccentForegroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundSelected" Value="{Binding DataContext.AccentForegroundSelected, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="OpacityInactive" Value="{Binding DataContext.OpacityInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource MenuItemEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource MenuItemEx.TopLevelHeader.ControlTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource MenuItemEx.TopLevel.ControlTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource MenuItemEx.Header.ControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>