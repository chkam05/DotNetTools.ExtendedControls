<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:theme="clr-namespace:chkam05.Tools.ControlsEx.Data.Theme"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/ThumbEx.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/chkam05.Tools.ControlsEx;component/Themes/RepeatButtonEx.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <x:Static x:Key="ThemeMgr" Member="theme:ThemeManager.Instance"/>

    <Style x:Key="ScrollBarEx.RepeatButtonTransparentStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Fill="{TemplateBinding Background}"
                        Height="{TemplateBinding Height}"
                        Stroke="{TemplateBinding BorderBrush}"
                        StrokeThickness="{TemplateBinding BorderThickness}"
                        Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarEx.RepeatButtonExStyle" BasedOn="{StaticResource RepeatButtonExStyle}" TargetType="{x:Type local:RepeatButtonEx}">
        <Setter Property="Background" Value="{Binding ButtonBackground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding ButtonBackgroundInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding ButtonBackgroundMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundPressed" Value="{Binding ButtonBackgroundPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrush" Value="{Binding ButtonBorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding ButtonBorderBrushInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding ButtonBorderBrushMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushPressed" Value="{Binding ButtonBorderBrushPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius"  Value="{Binding ButtonCornerRadius, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding ForegroundInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding ForegroundMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="ForegroundPressed" Value="{Binding ForegroundPressed, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{Binding ButtonMargin, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="OpacityInactive" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ScrollBarEx.ThumbExVerticalStyle" BasedOn="{StaticResource ThumbExStyle}" TargetType="{x:Type local:ThumbEx}">
        <Setter Property="Background" Value="{Binding ThumbBackground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundDragging" Value="{Binding ThumbBackgroundDragging, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding ThumbBackgroundInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding ThumbBackgroundMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrush" Value="{Binding ThumbBorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushDragging" Value="{Binding ThumbBorderBrushDragging, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding ThumbBorderBrushInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding ThumbBorderBrushMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="CornerRadius" Value="{Binding ThumbCornerRadius, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="Margin" Value="{Binding ThumbMargin, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="OpacityInactive" Value="1"/>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>

    <Style x:Key="ScrollBarEx.ThumbExHorizontalStyle" BasedOn="{StaticResource ThumbExStyle}" TargetType="{x:Type local:ThumbEx}">
        <Setter Property="Background" Value="{Binding ThumbBackground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundDragging" Value="{Binding ThumbBackgroundDragging, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding ThumbBackgroundInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding ThumbBackgroundMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrush" Value="{Binding ThumbBorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushDragging" Value="{Binding ThumbBorderBrushDragging, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding ThumbBorderBrushInactive, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding ThumbBorderBrushMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="CornerRadius" Value="{Binding ThumbCornerRadius, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="Margin" Value="{Binding ThumbMargin, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScrollBarEx}}}"/>
        <Setter Property="OpacityInactive" Value="1"/>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>

    <ControlTemplate x:Key="ScrollBarExStyle.VerticalControlTemplate" TargetType="{x:Type local:ScrollBarEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">
            
            <Grid
                x:Name="Bg"
                SnapsToDevicePixels="true">

                <Grid.RowDefinitions>
                    <RowDefinition x:Name="upRow" MaxHeight="{TemplateBinding ButtonVerticalHeight}"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition x:Name="downRow" MaxHeight="{TemplateBinding ButtonVerticalHeight}"/>
                </Grid.RowDefinitions>

                <Border
                    
                    Grid.Row="1"/>

                <local:RepeatButtonEx
                    x:Name="PART_LineUpButton"
                    Command="{x:Static ScrollBar.LineUpCommand}"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Style="{TemplateBinding StyleButton}"
                    Visibility="{TemplateBinding ButtonVisibility}">

                    <materialDesign:PackIcon
                        x:Name="ArrowTop"
                        Kind="KeyboardArrowUp"
                        HorizontalAlignment="Center"
                        Margin="0,0,1,0"
                        VerticalAlignment="Center"/>
                </local:RepeatButtonEx>

                <Track
                    x:Name="PART_Track"
                    IsDirectionReversed="true"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Grid.Row="1">

                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static ScrollBar.PageUpCommand}"
                            Style="{StaticResource ScrollBarEx.RepeatButtonTransparentStyle}"/>
                    </Track.DecreaseRepeatButton>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static ScrollBar.PageDownCommand}"
                            Style="{StaticResource ScrollBarEx.RepeatButtonTransparentStyle}"/>
                    </Track.IncreaseRepeatButton>

                    <Track.Thumb>
                        <local:ThumbEx
                            x:Name="thumb"
                            Style="{TemplateBinding StyleThumbVertical}"/>
                    </Track.Thumb>
                </Track>

                <local:RepeatButtonEx
                    x:Name="PART_LineDownButton"
                    Command="{x:Static ScrollBar.LineDownCommand}"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Grid.Row="2"
                    Style="{TemplateBinding StyleButton}"
                    Visibility="{TemplateBinding ButtonVisibility}">

                    <materialDesign:PackIcon
                        x:Name="ArrowBottom"
                        Kind="KeyboardArrowDown"
                        HorizontalAlignment="Center"
                        Margin="0,0,1,0"
                        VerticalAlignment="Center"/>
                </local:RepeatButtonEx>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="ButtonVisibility" Value="Collapsed">
                <Setter Property="MaxHeight" TargetName="upRow" Value="0"/>
                <Setter Property="MaxHeight" TargetName="downRow" Value="0"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
            </Trigger>
                
            <Trigger Property="UseSystemDimensions" Value="true">
                <Setter Property="MaxHeight" TargetName="upRow" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                <Setter Property="MaxHeight" TargetName="downRow" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollBarExStyle.HorizontalControlTemplate" TargetType="{x:Type local:ScrollBarEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="true">
            
            <Grid
                x:Name="Bg"
                SnapsToDevicePixels="true">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="leftColumn" MaxWidth="{TemplateBinding ButtonHorizontalWidth}"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition x:Name="rightColumn" MaxWidth="{TemplateBinding ButtonHorizontalWidth}"/>
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="1"/>

                <local:RepeatButtonEx
                    x:Name="PART_LineLeftButton"
                    Command="{x:Static ScrollBar.LineLeftCommand}"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Style="{TemplateBinding StyleButton}"
                    Visibility="{TemplateBinding ButtonVisibility}">

                    <materialDesign:PackIcon
                        x:Name="ArrowLeft"
                        Kind="ChevronLeft"
                        HorizontalAlignment="Center"
                        Margin="0"
                        VerticalAlignment="Center"/>
                </local:RepeatButtonEx>

                <Track
                    x:Name="PART_Track"
                    Grid.Column="1"
                    IsEnabled="{TemplateBinding IsMouseOver}">

                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static ScrollBar.PageLeftCommand}"
                            Style="{StaticResource ScrollBarEx.RepeatButtonTransparentStyle}"/>
                    </Track.DecreaseRepeatButton>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Command="{x:Static ScrollBar.PageRightCommand}"
                            Style="{StaticResource ScrollBarEx.RepeatButtonTransparentStyle}"/>
                    </Track.IncreaseRepeatButton>

                    <Track.Thumb>
                        <local:ThumbEx
                            x:Name="thumb"
                            Style="{TemplateBinding StyleThumbHorizontal}"/>
                    </Track.Thumb>
                </Track>

                <local:RepeatButtonEx
                    x:Name="PART_LineRightButton"
                    Command="{x:Static ScrollBar.LineRightCommand}"
                    Grid.Column="2"
                    IsEnabled="{TemplateBinding IsMouseOver}"
                    Style="{TemplateBinding StyleButton}"
                    Visibility="{TemplateBinding ButtonVisibility}">

                    <materialDesign:PackIcon
                        x:Name="ArrowRight"
                        Kind="ChevronRight"
                        HorizontalAlignment="Center"
                        Margin="0"
                        VerticalAlignment="Center"/>
                </local:RepeatButtonEx>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonVisibility" Value="Collapsed">
                <Setter Property="MaxWidth" TargetName="leftColumn" Value="0"/>
                <Setter Property="MaxWidth" TargetName="rightColumn" Value="0"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding BackgroundMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding BorderBrushMouseOver, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
            </Trigger>
            
            <Trigger Property="UseSystemDimensions" Value="true">
                <Setter Property="MaxWidth" TargetName="leftColumn" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                <Setter Property="MaxWidth" TargetName="rightColumn" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ScrollBarExStyle" TargetType="{x:Type local:ScrollBarEx}">
        <Setter Property="Background" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BackgroundMouseOver" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackground" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBackgroundPressed" Value="{Binding DataContext.AccentBackgroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrush" Value="{Binding DataContext.AccentBorderBrush, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ButtonBorderBrushPressed" Value="{Binding DataContext.AccentBorderBrushPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrush" Value="{Binding DataContext.ThemeBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{Binding DataContext.AccentForeground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundInactive" Value="{Binding DataContext.ForegroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundMouseOver" Value="{Binding DataContext.AccentForegroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ForegroundPressed" Value="{Binding DataContext.AccentForegroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="ThumbBackground" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBackgroundDragging" Value="{Binding DataContext.AccentBackgroundPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBackgroundInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBackgroundMouseOver" Value="{Binding DataContext.AccentBackgroundMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBorderBrush" Value="{Binding DataContext.AccentBackground, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBorderBrushDragging" Value="{Binding DataContext.AccentBorderBrushPressed, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBorderBrushInactive" Value="{Binding DataContext.BackgroundInactive, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="ThumbBorderBrushMouseOver" Value="{Binding DataContext.AccentBorderBrushMouseOver, Mode=OneWay, Source={StaticResource ThemeMgr}}"/>
        <Setter Property="Template" Value="{StaticResource ScrollBarExStyle.VerticalControlTemplate}"/>
        <Setter Property="Width" Value="12"/>
        
        <Style.Triggers>
            <Trigger Property="UseSystemDimensions" Value="true">
                <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            </Trigger>

            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="12"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="12"/>
                <Setter Property="Template" Value="{StaticResource ScrollBarExStyle.HorizontalControlTemplate}"/>
                <Setter Property="Width" Value="Auto"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"/>
                    <Condition Property="UseSystemDimensions" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>