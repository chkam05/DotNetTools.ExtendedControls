<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <SolidColorBrush x:Key="ButtonEx.Background">#FF0078D7</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonEx.BorderBrush">#FF0078D7</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonEx.Foreground">Black</SolidColorBrush>

    <Style x:Key="ButtonEx.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonEx.ControlTemplate" TargetType="{x:Type local:ButtonEx}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="true">

            <Grid
                HorizontalAlignment="Center"
                VerticalAlignment="Center">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="colLeft" Width="*"/>
                    <ColumnDefinition x:Name="colCenter" Width="auto"/>
                    <ColumnDefinition x:Name="colRight" Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition x:Name="rowTop" Height="*"/>
                    <RowDefinition x:Name="rowCenter" Height="auto"/>
                    <RowDefinition x:Name="rowBottom" Height="*"/>
                </Grid.RowDefinitions>

                <materialDesign:PackIcon
                    x:Name="packIcon"
                    Grid.Column="1"
                    Grid.Row="1"
                    Foreground="{TemplateBinding Foreground}"
                    Height="{TemplateBinding IconHeight}"
                    HorizontalAlignment="Stretch"
                    Kind="{TemplateBinding IconKind}"
                    Margin="{TemplateBinding IconMargin}"
                    MaxHeight="{TemplateBinding IconMaxHeight}"
                    MaxWidth="{TemplateBinding IconMaxWidth}"
                    MinHeight="{TemplateBinding IconMinHeight}"
                    MinWidth="{TemplateBinding IconMinWidth}"
                    Width="{TemplateBinding IconWidth}"
                    VerticalAlignment="Stretch"/>

                <ContentPresenter
                    x:Name="contentPresenter"
                    Focusable="False"
                    Grid.Column="2"
                    Grid.Row="1"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Margin="0"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

            </Grid>
        </Border>

        <ControlTemplate.Triggers>

            <!-- Is Mouse Over. -->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="Foreground" TargetName="packIcon" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
            </Trigger>

            <!-- Is Pressed. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding PressedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="Foreground" TargetName="packIcon" Value="{Binding PressedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="packIcon" Value="{Binding PressedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
            </Trigger>

            <!-- Is Permanently Pressed. -->
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" TargetName="border" Value="{Binding PressedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="Foreground" TargetName="packIcon" Value="{Binding PressedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="packIcon" Value="{Binding PressedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ButtonEx}}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>

            <!-- Has No Content. -->
            <Trigger Property="HasContent" Value="False">
                <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="packIcon" Property="Margin" Value="0"/>
            </Trigger>

            <!-- Has No Icon. -->
            <Trigger Property="IconKind" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter TargetName="packIcon" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <!-- ContentSide Left. -->
            <Trigger Property="ContentSide" Value="Left">
                <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0"/>
                <Setter TargetName="contentPresenter" Property="Grid.Row" Value="1"/>
            </Trigger>

            <!-- ContentSide Left No Content. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ContentSide" Value="Left"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="packIcon" Property="Margin" Value="4,0,0,0"/>
            </MultiTrigger>

            <!-- ContentSide Top. -->
            <Trigger Property="ContentSide" Value="Top">
                <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1"/>
                <Setter TargetName="contentPresenter" Property="Grid.Row" Value="0"/>
            </Trigger>

            <!-- ContentSide Top No Content. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ContentSide" Value="Top"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="packIcon" Property="Margin" Value="0,4,0,0"/>
            </MultiTrigger>

            <!-- ContentSide Right. -->
            <Trigger Property="ContentSide" Value="Right">
                <Setter TargetName="contentPresenter" Property="Grid.Column" Value="2"/>
                <Setter TargetName="contentPresenter" Property="Grid.Row" Value="1"/>
            </Trigger>

            <!-- ContentSide Right No Content. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ContentSide" Value="Right"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="packIcon" Property="Margin" Value="0,0,4,0"/>
            </MultiTrigger>

            <!-- ContentSide Bottom. -->
            <Trigger Property="ContentSide" Value="Bottom">
                <Setter TargetName="contentPresenter" Property="Grid.Column" Value="1"/>
                <Setter TargetName="contentPresenter" Property="Grid.Row" Value="2"/>
            </Trigger>

            <!-- ContentSide Bottom No Content. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ContentSide" Value="Bottom"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="packIcon" Property="Margin" Value="0,0,0,4"/>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonExStyle" TargetType="{x:Type local:ButtonEx}">
        <Setter Property="Background" Value="{StaticResource ButtonEx.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonEx.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonEx.Foreground}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonEx.FocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template" Value="{StaticResource ButtonEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>