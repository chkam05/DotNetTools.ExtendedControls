<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:chkam05.Tools.ControlsEx.Converters"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <converters:CheckBoxStyleCheckMarkConverter x:Key="CheckBoxStyleCheckMarkConverter"/>

    <SolidColorBrush x:Key="CheckBoxEx.Foreground">Black</SolidColorBrush>
    
    <Style x:Key="CheckBoxEx.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxEx.OptionMark.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CheckBoxEx.ControlTemplate" TargetType="{x:Type local:CheckBoxEx}">
        <Grid
            x:Name="templateRoot"
            Background="Transparent"
            SnapsToDevicePixels="True">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border
                x:Name="checkBoxBorder"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="1"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                <Grid x:Name="markGrid">

                    <materialDesign:PackIcon
                        x:Name="optionMark"
                        Foreground="{TemplateBinding CheckMarkBrush}"
                        HorizontalAlignment="Left"
                        Kind="{TemplateBinding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}}"
                        Margin="0"
                        MinHeight="{TemplateBinding CheckMarkHeight}"
                        MinWidth="{TemplateBinding CheckMarkWidth}"/>

                    <Rectangle
                        x:Name="indeterminateMark"
                        Fill="Transparent"
                        Stroke="Transparent"/>
                </Grid>
            </Border>

            <ContentPresenter
                x:Name="contentPresenter"
                Grid.Column="1"
                Focusable="False"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.Foreground="{TemplateBinding Foreground}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>

            <!-- Has Content. -->
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxEx.OptionMark.FocusVisual}"/>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>

            <!-- Is Mouse Over. -->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" TargetName="optionMark" Value="{Binding MouseOverCheckMarkBrush, RelativeSource={RelativeSource AncestorType={x:Type local:CheckBoxEx}}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>

            <!-- Is Pressed. -->
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" TargetName="optionMark" Value="{Binding PressedCheckMarkBrush, RelativeSource={RelativeSource AncestorType={x:Type local:CheckBoxEx}}}"/>
            </Trigger>

            <!-- Is Checked. -->
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Kind" TargetName="optionMark" Value="{Binding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}, ConverterParameter=true, RelativeSource={RelativeSource AncestorType={x:Type local:CheckBoxEx}}}"/>
            </Trigger>

            <!-- Is Unchecked. -->
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Kind" TargetName="optionMark" Value="{Binding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:CheckBoxEx}}}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CheckBoxExStyle" TargetType="{x:Type local:CheckBoxEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxEx.FocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource CheckBoxEx.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template" Value="{StaticResource CheckBoxEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>