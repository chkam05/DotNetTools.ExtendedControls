<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:chkam05.Tools.ControlsEx.Converters"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <converters:CheckBoxStyleCheckMarkConverter x:Key="CheckBoxStyleCheckMarkConverter"/>
    
    <GridLength x:Key="ContextMenuItemEx.Content.ColumnWidth">*</GridLength>
    <GridLength x:Key="ContextMenuItemEx.Icon.ColumnWidth">Auto</GridLength>
    <GridLength x:Key="ContextMenuItemEx.Separator1.ColumnWidth">13</GridLength>
    <GridLength x:Key="ContextMenuItemEx.Separator2.ColumnWidth">30</GridLength>
    <GridLength x:Key="ContextMenuItemEx.Shortcut.ColumnWidth">Auto</GridLength>
    <GridLength x:Key="ContextMenuItemEx.SubMenu.ColumnWidth">20</GridLength>
    
    <sys:Double x:Key="ContextMenuItemEx.Icon.ColumnMinWidth">24</sys:Double>
    
    <ControlTemplate x:Key="ContextMenuItemEx.DataTemplate" TargetType="{x:Type local:ContextMenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="True">

            <Grid Margin="-1">

                <Grid.ColumnDefinitions>
                    <!-- Icon/CheckBox -->
                    <ColumnDefinition
                        MinWidth="{StaticResource ContextMenuItemEx.Icon.ColumnMinWidth}"
                        SharedSizeGroup="MenuItemIconColumnGroup"
                        Width="{StaticResource ContextMenuItemEx.Icon.ColumnWidth}"/>
                    <!-- Separator -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Separator1.ColumnWidth}"/>
                    <!-- Content -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Content.ColumnWidth}"/>
                    <!-- Separator -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Separator2.ColumnWidth}"/>
                    <!-- Shortcut Text -->
                    <ColumnDefinition
                        SharedSizeGroup="MenuItemIGTColumnGroup"
                        Width="{StaticResource ContextMenuItemEx.Shortcut.ColumnWidth}"/>
                    <!-- Separator/Next Button -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.SubMenu.ColumnWidth}"/>
                </Grid.ColumnDefinitions>

                <Grid
                    Grid.Column="0">

                    <!-- Icon -->
                    <ContentPresenter
                        x:Name="Icon"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding IconHeight}"
                        Margin="3"
                        MaxHeight="{TemplateBinding IconMaxHeight}"
                        MaxWidth="{TemplateBinding IconMaxWidth}"
                        MinHeight="{TemplateBinding IconMinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding IconWidth}"/>

                    <!-- PackIcon -->
                    <materialDesign:PackIcon
                        x:Name="packIcon"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding IconHeight}"
                        Kind="{TemplateBinding IconKind}"
                        Margin="3"
                        MaxHeight="{TemplateBinding IconMaxHeight}"
                        MaxWidth="{TemplateBinding IconMaxWidth}"
                        MinHeight="{TemplateBinding IconMinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding IconWidth}"/>

                    <!-- CheckBox -->
                    <materialDesign:PackIcon
                        x:Name="GlyphPanel"
                        Foreground="{TemplateBinding Foreground}"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding CheckMarkHeight}"
                        Kind="{TemplateBinding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}}"
                        Margin="{TemplateBinding CheckMarkMargin}"
                        MaxHeight="{TemplateBinding CheckMarkMaxHeight}"
                        MaxWidth="{TemplateBinding CheckMarkMaxWidth}"
                        MinHeight="{TemplateBinding CheckMarkMinHeight}"
                        MinWidth="{TemplateBinding CheckMarkMinWidth}"
                        Visibility="Hidden"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding CheckMarkWidth}"/>

                </Grid>

                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>

                <TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>

            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <!-- No Icon. -->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <!-- No Pack Icon. -->
            <DataTrigger Binding="{Binding IconKind}" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </DataTrigger>

            <!-- Is Checkable. -->
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <!-- Is Checked. -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="{Binding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}, ConverterParameter=True, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
            </Trigger>

            <!-- Is Highlighted. -->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="menuGestureText" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ContextMenuItemEx.Container.DataTemplate" TargetType="{x:Type local:ContextMenuItemEx}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}"
            SnapsToDevicePixels="True">

            <Grid Margin="-1">

                <Grid.ColumnDefinitions>
                    <!-- Icon/CheckBox -->
                    <ColumnDefinition
                        MinWidth="{StaticResource ContextMenuItemEx.Icon.ColumnMinWidth}"
                        SharedSizeGroup="MenuItemIconColumnGroup"
                        Width="{StaticResource ContextMenuItemEx.Icon.ColumnWidth}"/>
                    <!-- Separator -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Separator1.ColumnWidth}"/>
                    <!-- Content -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Content.ColumnWidth}"/>
                    <!-- Separator -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.Separator2.ColumnWidth}"/>
                    <!-- Shortcut Text -->
                    <ColumnDefinition
                        SharedSizeGroup="MenuItemIGTColumnGroup"
                        Width="{StaticResource ContextMenuItemEx.Shortcut.ColumnWidth}"/>
                    <!-- Separator/Next Button -->
                    <ColumnDefinition Width="{StaticResource ContextMenuItemEx.SubMenu.ColumnWidth}"/>
                </Grid.ColumnDefinitions>

                <Grid
                    Grid.Column="0">

                    <!-- Icon -->
                    <ContentPresenter
                        x:Name="Icon"
                        Content="{TemplateBinding Icon}"
                        ContentSource="Icon"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding IconHeight}"
                        Margin="3"
                        MaxHeight="{TemplateBinding IconMaxHeight}"
                        MaxWidth="{TemplateBinding IconMaxWidth}"
                        MinHeight="{TemplateBinding IconMinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding IconWidth}"/>

                    <!-- PackIcon -->
                    <materialDesign:PackIcon
                        x:Name="packIcon"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding IconHeight}"
                        Kind="{TemplateBinding IconKind}"
                        Margin="3"
                        MaxHeight="{TemplateBinding IconMaxHeight}"
                        MaxWidth="{TemplateBinding IconMaxWidth}"
                        MinHeight="{TemplateBinding IconMinHeight}"
                        MinWidth="{TemplateBinding MinWidth}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding IconWidth}"/>

                    <!-- CheckBox -->
                    <materialDesign:PackIcon
                        x:Name="GlyphPanel"
                        Foreground="{TemplateBinding Foreground}"
                        HorizontalAlignment="Center"
                        Height="{TemplateBinding CheckMarkHeight}"
                        Kind="{TemplateBinding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}}"
                        Margin="{TemplateBinding CheckMarkMargin}"
                        MaxHeight="{TemplateBinding CheckMarkMaxHeight}"
                        MaxWidth="{TemplateBinding CheckMarkMaxWidth}"
                        MinHeight="{TemplateBinding CheckMarkMinHeight}"
                        MinWidth="{TemplateBinding CheckMarkMinWidth}"
                        Visibility="Hidden"
                        VerticalAlignment="Center"
                        Width="{TemplateBinding CheckMarkWidth}"/>

                </Grid>

                <ContentPresenter
                    x:Name="menuHeaderContainer"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    VerticalAlignment="Center"/>

                <TextBlock
                    x:Name="menuGestureText"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="4"
                    HorizontalAlignment="Left"
                    Margin="{TemplateBinding Padding}"
                    Opacity="0.75"
                    Text="{TemplateBinding InputGestureText}"
                    VerticalAlignment="Center"/>

                <materialDesign:PackIcon
                    x:Name="RightArrow"
                    Foreground="{TemplateBinding Foreground}"
                    Grid.Column="5"
                    Kind="ChevronRight"
                    HorizontalAlignment="Center"
                    Margin="4,0"
                    VerticalAlignment="Center"/>

                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    Placement="Right"
                    VerticalOffset="-3">

                    <Border
                        x:Name="SubMenuBorder"
                        Background="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContextMenuEx}}}"
                        BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContextMenuEx}}}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContextMenuEx}}}"
                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContextMenuEx}}}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ContextMenuEx}}}">

                        <ScrollViewer
                            x:Name="SubMenuScrollViewer"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                            <Grid
                                Background="Transparent"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">

                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Fill="Transparent"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>

                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    Grid.IsSharedSizeScope="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    KeyboardNavigation.TabNavigation="Cycle"/>

                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <!-- Is Suspending Popup Animation. -->
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>

            <!-- No Icon. -->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>

            <!-- No Pack Icon. -->
            <DataTrigger Binding="{Binding IconKind}" Value="{x:Static materialDesign:PackIconKind.None}">
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </DataTrigger>

            <!-- Is Checkable. -->
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="packIcon" Value="Collapsed"/>
            </Trigger>

            <!-- Is Checked. -->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Kind" TargetName="GlyphPanel" Value="{Binding CheckBoxStyle, Converter={StaticResource CheckBoxStyleCheckMarkConverter}, ConverterParameter=True, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
            </Trigger>

            <!-- Is Highlighted. -->
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="menuHeaderContainer" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
                <Setter Property="Foreground" TargetName="menuGestureText" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ContextMenuItemEx}}}"/>
            </Trigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>

            <!-- Can Content Scroll. -->
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ContextMenuItemExStyle" TargetType="{x:Type local:ContextMenuItemEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="Template" Value="{StaticResource ContextMenuItemEx.DataTemplate}"/>

        <Style.Triggers>

            <!-- Has Items. -->
            <Trigger Property="HasItems" Value="True">
                <Setter Property="Template" Value="{StaticResource ContextMenuItemEx.Container.DataTemplate}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>