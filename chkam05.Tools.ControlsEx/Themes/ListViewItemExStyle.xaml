<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx">

    <SolidColorBrush x:Key="ListViewItemEx.Foreground">Black</SolidColorBrush>
    
    <Style x:Key="ListViewItemEx.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="True"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="ListViewItemEx.ControlTemplate" TargetType="{x:Type local:ListViewItemEx}">
        <Border 
            x:Name="border" 
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">

            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding ContentTemplate}" 
                Content="{TemplateBinding Content}" 
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.Foreground="{TemplateBinding Foreground}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            
        </Border>
        <ControlTemplate.Triggers>

            <!-- Is Mouse Over. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Selected and Focused. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding SelectedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding SelectedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding SelectedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Selected. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding SelectedInactiveBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding SelectedInactiveBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding SelectedInactiveForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GridViewItemEx.ControlTemplate" TargetType="{x:Type local:ListViewItemEx}">
        <Border 
            x:Name="border" 
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            CornerRadius="{TemplateBinding CornerRadius}"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">

            <GridViewRowPresenter
                x:Name="contentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextBlock.Foreground="{TemplateBinding Foreground}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

        </Border>
        <ControlTemplate.Triggers>

            <!-- Is Mouse Over. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding MouseOverForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Selected and Focused. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding SelectedBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding SelectedBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding SelectedForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Selected. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="border" Value="{Binding SelectedInactiveBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding SelectedInactiveBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter" Value="{Binding SelectedInactiveForeground, RelativeSource={RelativeSource AncestorType={x:Type local:ListViewItemEx}}}"/>
            </MultiTrigger>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ListViewItemExStyle" TargetType="{x:Type local:ListViewItemEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemEx.FocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource ListViewItemEx.Foreground}"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource GridViewItemEx.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>

        <Style.Triggers>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Template" Value="{StaticResource ListViewItemEx.ControlTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>