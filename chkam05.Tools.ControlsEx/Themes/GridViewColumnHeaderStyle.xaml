<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx">

    <SolidColorBrush x:Key="GridViewColumnHeader.Background">White</SolidColorBrush>
    <SolidColorBrush x:Key="GridViewColumnHeader.Foreground">Black</SolidColorBrush>

    <ControlTemplate x:Key="GridViewColumnHeader.Gripper.ControlTemplate" TargetType="{x:Type Thumb}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Margin="{TemplateBinding Margin}">

        </Border>
    </ControlTemplate>

    <Style x:Key="GridViewColumnHeader.Gripper" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{StaticResource GridViewColumnHeader.Gripper.ControlTemplate}"/>
    </Style>
    
    <ControlTemplate x:Key="GridViewColumnHeader.ControlTemplate" TargetType="{x:Type GridViewColumnHeader}">
        <Grid
            Margin="{Binding ColumnHeaderMargin, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}">
            <!--VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Pressed"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups-->
            
            <Border
                x:Name="Border" 
                Background="{Binding ColumnHeaderBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderBrush="{Binding ColumnHeaderBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}" 
                BorderThickness="{Binding ColumnHeaderBorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"
                CornerRadius="{Binding ColumnHeaderCornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"
                Padding="{Binding ColumnHeaderPadding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}">

                <ContentPresenter
                    x:Name="HeaderContent"
                    Content="{TemplateBinding Content}"
                    Margin="0"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    TextBlock.Foreground="{Binding ColumnHeaderForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"
                    TextBlock.TextAlignment="Left"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            
            </Border>

            <Thumb
                x:Name="PART_HeaderGripper"
                Background="Transparent"
                BorderBrush="{Binding ColumnHeaderBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"
                BorderThickness="{Binding ColumnHeaderBorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"
                HorizontalAlignment="Right"
                Style="{StaticResource GridViewColumnHeader.Gripper}"
                Width="{Binding ColumnHeaderGripperWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
        </Grid>
        <ControlTemplate.Triggers>

            <!-- Is Disabled. -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
            </Trigger>

            <!-- Has Content. -->
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderEmptyBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderEmptyBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </Trigger>

            <!-- Is Mouse Over. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderMouseOverBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderMouseOverBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="HeaderContent" Value="{Binding ColumnHeaderMouseOverForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </MultiTrigger>

            <!-- Is Pressed. -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="HasContent" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Border" Value="{Binding ColumnHeaderPressedBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ColumnHeaderPressedBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
                <Setter Property="TextBlock.Foreground" TargetName="HeaderContent" Value="{Binding ColumnHeaderPressedForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{Binding ColumnHeaderBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
        <Setter Property="BorderBrush" Value="{Binding ColumnHeaderBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Foreground" Value="{Binding ColumnHeaderForeground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewEx}}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource GridViewColumnHeader.ControlTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
</ResourceDictionary>