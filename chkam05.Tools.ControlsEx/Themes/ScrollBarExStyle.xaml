<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:chkam05.Tools.ControlsEx">

    <SolidColorBrush x:Key="ScrollBarEx.Foreground">White</SolidColorBrush>

    <Style x:Key="ScrollBarEx.RepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle
                        Fill="{TemplateBinding Background}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarEx.ThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">

                    <Border
                        x:Name="rectangle"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding ThumbCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"
                        Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"
                        SnapsToDevicePixels="True"
                        Width="{TemplateBinding Width}"
                        VerticalAlignment="Stretch"/>

                    <ControlTemplate.Triggers>

                        <!-- Is Mouse Over. -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{Binding MouseOverThumbBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                            <Setter Property="BorderBrush" TargetName="rectangle" Value="{Binding MouseOverThumbBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                        </Trigger>

                        <!-- Is Dragging. -->
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{Binding DraggingThumbBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                            <Setter Property="BorderBrush" TargetName="rectangle" Value="{Binding DraggingThumbBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarEx.ThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">

                    <Border
                        x:Name="rectangle"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding ThumbCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"
                        Height="{TemplateBinding Height}"
                        HorizontalAlignment="Stretch"
                        Margin="{Binding Padding, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"
                        SnapsToDevicePixels="True"/>

                    <ControlTemplate.Triggers>

                        <!-- Is Mouse Over. -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{Binding MouseOverThumbBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                            <Setter Property="BorderBrush" TargetName="rectangle" Value="{Binding MouseOverThumbBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                        </Trigger>

                        <!-- Is Dragging. -->
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{Binding DraggingThumbBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                            <Setter Property="BorderBrush" TargetName="rectangle" Value="{Binding DraggingThumbBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type local:ScrollBarEx}}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ScrollBarEx.HorizontalTemplate" TargetType="{x:Type local:ScrollBarEx}">
        <Grid
            x:Name="Bg"
            SnapsToDevicePixels="true">

            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"/>

            <Track
                x:Name="PART_Track"
                Grid.Column="1"
                IsEnabled="{TemplateBinding IsMouseOver}">

                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Command="{x:Static ScrollBar.PageLeftCommand}"
                        Style="{StaticResource ScrollBarEx.RepeatButton}"/>
                </Track.DecreaseRepeatButton>

                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Command="{x:Static ScrollBar.PageRightCommand}"
                        Style="{StaticResource ScrollBarEx.RepeatButton}"/>
                </Track.IncreaseRepeatButton>

                <Track.Thumb>
                    <Thumb
                        Background="{TemplateBinding ThumbBackground}"
                        BorderBrush="{TemplateBinding ThumbBorderBrush}"
                        BorderThickness="{TemplateBinding ThumbBorderThickness}"
                        Style="{StaticResource ScrollBarEx.ThumbHorizontal}"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollBarEx.VerticalTemplate" TargetType="{x:Type local:ScrollBarEx}">
        <Grid
            x:Name="Bg"
            SnapsToDevicePixels="true">

            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"/>

            <Track
                x:Name="PART_Track"
                IsDirectionReversed="true"
                IsEnabled="{TemplateBinding IsMouseOver}">

                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Command="{x:Static ScrollBar.PageUpCommand}"
                        Style="{StaticResource ScrollBarEx.RepeatButton}"/>
                </Track.DecreaseRepeatButton>

                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Command="{x:Static ScrollBar.PageDownCommand}"
                        Style="{StaticResource ScrollBarEx.RepeatButton}"/>
                </Track.IncreaseRepeatButton>

                <Track.Thumb>
                    <Thumb
                        Background="{TemplateBinding ThumbBackground}"
                        BorderBrush="{TemplateBinding ThumbBorderBrush}"
                        BorderThickness="{TemplateBinding ThumbBorderThickness}"
                        Style="{StaticResource ScrollBarEx.ThumbVertical}"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollBarExStyle" TargetType="{x:Type local:ScrollBarEx}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ScrollBar.Foreground}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Template" Value="{StaticResource ScrollBarEx.VerticalTemplate}"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>

        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Template" Value="{StaticResource ScrollBarEx.HorizontalTemplate}"/>
                <Setter Property="Width" Value="Auto"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>